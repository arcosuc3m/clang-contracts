# RUN: llc -mtriple=x86_64-linux-gnu -global-isel -run-pass=legalizer %s -o - | FileCheck %s

--- |

  define void @test_sub_i1() { ret void}

  define i32 @test_sub_i32(i32 %arg1, i32 %arg2) {
    %ret = sub i32 %arg1, %arg2
    ret i32 %ret
  }

...
---
name:            test_sub_i1
# CHECK-LABEL: name:  test_sub_i1
alignment:       4
legalized:       false
regBankSelected: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
# CHECK:          %0(s32) = COPY %edx
# CHECK-NEXT:     %3(s8) = G_TRUNC %0(s32)
# CHECK-NEXT:     %4(s8) = G_TRUNC %0(s32)
# CHECK-NEXT:     %5(s8) = G_SUB %3, %4
# CHECK-NEXT:     %2(s1) = G_TRUNC %5(s8)
# CHECK-NEXT:     RET 0
body:             |
  bb.1 (%ir-block.0):

    %0(s32) = COPY %edx
    %1(s1) = G_TRUNC %0(s32)
    %2(s1) = G_SUB %1, %1
    RET 0
...
---
name:            test_sub_i32
# CHECK-LABEL: name:  test_sub_i32
alignment:       4
legalized:       false
regBankSelected: false
tracksRegLiveness: true
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
# CHECK:          %0(s32) = COPY %edi
# CHECK-NEXT:     %1(s32) = COPY %esi
# CHECK-NEXT:     %2(s32) = G_SUB %0, %1
# CHECK-NEXT:     %eax = COPY %2(s32)
# CHECK-NEXT:     RET 0, implicit %eax
body:             |
  bb.1 (%ir-block.0):
    liveins: %edi, %esi

    %0(s32) = COPY %edi
    %1(s32) = COPY %esi
    %2(s32) = G_SUB %0, %1
    %eax = COPY %2(s32)
    RET 0, implicit %eax

...
